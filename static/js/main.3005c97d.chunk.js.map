{"version":3,"sources":["firebase-config.ts","App.tsx","index.tsx"],"names":["db","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getFirestore","numRows","numCols","colors","useKey","key","callback","callbackRef","useRef","useEffect","current","downHandler","e","window","addEventListener","removeEventListener","App","canvasRef","holdRef","nextRef","holdTextRef","nextTextRef","enemyRef","useState","score","setScore","level","setLevel","x","y","matrix","player","setPlayer","arena","setArena","sumTime","setSumTime","dropTime","setDropTime","setCanvas","context","setContext","gameOver","setGameOver","holdPieceArena","setHoldPieceArena","holdPiece","setHoldPiece","setHoldPieceCanvas","holdPieceContext","setHoldPieceContext","nextPieceArena","setNextPieceArena","one","two","three","nextPiece","setNextPiece","setNextPieceCanvas","nextPieceContext","setNextPieceContext","setEnemyCanvas","enemyContext","setEnemyContext","enemy","setEnemy","enemyArena","setEnemyArena","playerRef","setPlayerRef","playerString","setPlayerString","ready","setReady","enemyId","setEnemyId","setUnsub","playerMove","drop","hardDrop","playerRotate","hold","initArena","initText","generateBoard","collectionRef","collection","onSnapshot","snapshot","docs","forEach","doc","a","id","updateEnemy","data","mergeNextReturn","i","length","j","drawNextPiece","mergeHoldReturn","drawHoldPiece","interval","setInterval","clearInterval","draw","offset","hardPlayerDrop","drawPlayer","drawPlayerDrop","drawGrid","updateData","array","newArena","tempArena","slice","_","value","push","playerInfo","setDoc","holdTextCanvas","nextTextCanvas","holdTextContext","getContext","nextTextContext","canvas","width","height","font","fillStyle","fillText","holdCanvas","holdContext","nextCanvas","nextContext","scale","holdCols","holdRows","nextCols","nextRows","enemyCanvas","row","col","rows","Array","from","drawPiece","collide","merge","playerReset","arenaSweep","count","dir","rotate","tempx","reverse","m","o","Error","error","newScore","rowCount","outer","splice","fill","unshift","updateLevel","globalAlpha","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","fillRect","piece","createPiece","Math","floor","random","start","playerResetStart","readyUp","addDoc","docRef","q","query","where","unsub","deleteDoc","type","className","ref","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3005c97d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCCOIXBE_hECvx_E9qGy6CwJADtJuSUui8\",\r\n    authDomain: \"tetris-fc499.firebaseapp.com\",\r\n    databaseURL: \"https://tetris-fc499-default-rtdb.firebaseio.com\",\r\n    projectId: \"tetris-fc499\",\r\n    storageBucket: \"tetris-fc499.appspot.com\",\r\n    messagingSenderId: \"74944565482\",\r\n    appId: \"1:74944565482:web:ad09a4c5f4a9648bb58793\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore();","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { db } from './firebase-config';\nimport { collection, query, where, deleteDoc, addDoc, updateDoc, setDoc, doc, onSnapshot } from \"firebase/firestore\";\n\ntype player = {\n  x: number,\n  y: number,\n  matrix: number[][] | null;\n}\n\ntype next = {\n  one: number[][] | null,\n  two: number[][] | null,\n  three: number[][] | null,\n}\n\nconst numRows = 15;\nconst numCols = 10;\n\nconst holdRows = 4;\nconst holdCols = 4;\n\nconst nextRows = 12;\nconst nextCols = 4;\n\nconst colors: string[] = [\n  'black',\n  'purple',\n  'yellow',\n  'orange',\n  'blue',\n  'cyan',\n  'green',\n  'red',\n]\n\nconst useKey = (key: string, callback: () => void) => {\n  const callbackRef = useRef<() => void>();\n  useEffect(() => {\n    callbackRef.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    const downHandler = (e: KeyboardEvent) => {\n      if (e.key === key) {\n        callbackRef.current();\n      }\n    }\n    window.addEventListener('keydown', downHandler);\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n    }\n  }, [key]);\n}\n\nconst App = () => {\n\n  const canvasRef = useRef(null);\n  const holdRef = useRef(null);\n  const nextRef = useRef(null);\n  const holdTextRef = useRef(null);\n  const nextTextRef = useRef(null);\n  const enemyRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [player, setPlayer] = useState<player>({ x: 0, y: 0, matrix: null });\n  const [arena, setArena] = useState<number[][]>(null);\n  const [sumTime, setSumTime] = useState<number>(-1);\n  const [dropTime, setDropTime] = useState<number>(500);\n  const [canvas, setCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [context, setContext] = useState<CanvasRenderingContext2D | null>(null);\n  const [gameOver, setGameOver] = useState(true);\n  const [holdPieceArena, setHoldPieceArena] = useState<number[][]>(null);\n  const [holdPiece, setHoldPiece] = useState<number[][] | null>(null);\n  const [holdPieceCanvas, setHoldPieceCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [holdPieceContext, setHoldPieceContext] = useState<CanvasRenderingContext2D | null>(null);\n  const [nextPieceArena, setNextPieceArena] = useState<number[][]>(null);\n  const [nextPiece, setNextPiece] = useState<next>({ one: null, two: null, three: null });\n  const [nextPieceCanvas, setNextPieceCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [nextPieceContext, setNextPieceContext] = useState<CanvasRenderingContext2D | null>(null);\n  const [enemyCanvas, setEnemyCanvas] = useState<HTMLCanvasElement | null>(null);\n  const [enemyContext, setEnemyContext] = useState<CanvasRenderingContext2D | null>(null);\n  const [enemy, setEnemy] = useState({ score: 0, level: 1 });\n  const [enemyArena, setEnemyArena] = useState<number[][]>(null);\n  const [playerRef, setPlayerRef] = useState(null);\n  const [playerString, setPlayerString] = useState<string>(null);\n  const [ready, setReady] = useState<boolean>(false);\n  const [enemyId, setEnemyId] = useState<string>(null);\n  const [unsub, setUnsub] = useState<() => void>(null);\n\n  useKey(\"ArrowLeft\", () => player.matrix ? playerMove(-1) : null);\n  useKey(\"ArrowRight\", () => player.matrix ? playerMove(1) : null);\n  useKey(\"ArrowDown\", () => player.matrix ? drop() : null);\n  useKey(\"ArrowUp\", () => player.matrix ? hardDrop() : null);\n  useKey(\"q\", () => player.matrix ? playerRotate(-1) : null);\n  useKey(\"w\", () => player.matrix ? playerRotate(1) : null);\n  useKey(\"e\", () => player.matrix ? hold() : null);\n\n  useEffect(() => {\n    initArena();\n    initText();\n    setArena(generateBoard(numRows, numCols));\n    setEnemyArena(generateBoard(numRows, numCols));\n    setHoldPieceArena(generateBoard(holdRows, holdCols));\n    setNextPieceArena(generateBoard(nextRows, nextCols));\n  }, []);\n\n  // const collectionRef = collection(db, \"users\");\n  //     const playerInfo = { ready: true };\n  //     const docRef = await addDoc(collectionRef, playerInfo);\n  //     const q = query(collection(db, \"users\"), where(\"ready\", \"==\", true));\n  //     const unsub = onSnapshot(q, (snapshot) => {\n  //       snapshot.docs.forEach(async (doc) => {\n  //         if (doc.id === docRef.id) return;\n  //         setEnemyId(doc.id);\n  //         setUnsub(unsub);\n  //         // await updateEnemy(doc.data().x, doc.data().y, doc.data().arena, doc.data().score, doc.data().level );\n  //       });\n  //     });\n\n  useEffect(() => {\n    if(!enemyId) return;\n    const collectionRef = collection(db, \"users\");\n    onSnapshot(collectionRef, (snapshot) => {\n      snapshot.docs.forEach(async (doc) => {\n        if(doc.id !== enemyId) return;\n        await updateEnemy(doc.data().x, doc.data().y, doc.data().arena, doc.data().score, doc.data().level );\n      });\n    });\n  }, [enemyId]);\n\n  useEffect(() => {\n    if (!nextPiece.one || !nextPiece.two || !nextPiece.three) return;\n    setNextPieceArena(mergeNextReturn(nextPieceArena, [nextPiece.one, nextPiece.two, nextPiece.three], nextRows, nextCols));\n  }, [nextPiece])\n\n  useEffect(() => {\n    if (!nextPieceArena) return;\n    for (let i = 0; i < nextPieceArena.length; i++) {\n      for (let j = 0; j < nextPieceArena[0].length; j++) {\n        drawNextPiece(j, i, holdPiece);\n      }\n    }\n  }, [nextPieceArena])\n\n  useEffect(() => {\n    if (!holdPiece) return;\n    setHoldPieceArena(mergeHoldReturn(holdPieceArena, holdPiece, holdRows, holdCols));\n  }, [holdPiece])\n\n  useEffect(() => {\n    if (!holdPieceArena) return;\n    for (let i = 0; i < holdPieceArena.length; i++) {\n      for (let j = 0; j < holdPieceArena[0].length; j++) {\n        drawHoldPiece(j, i, holdPiece);\n      }\n    }\n  }, [holdPieceArena])\n\n  useEffect(() => {\n    if (sumTime < 0) return;\n    const interval = setInterval(() => {\n      setSumTime(sumTime + 10);\n    }, 10);\n    if (sumTime > dropTime) {\n      drop();\n    }\n    return () => clearInterval(interval);\n  }, [sumTime])\n\n  useEffect(() => {\n    if (!arena) return;\n    draw(context, arena);\n    if (player.matrix) {\n      const offset = hardPlayerDrop();\n      for (let i = 0; i < player.matrix.length; i++) {\n        for (let j = 0; j < player.matrix[i].length; j++) {\n          if (player.matrix[i][j] != 0) {\n            drawPlayer(j, i, { x: player.x, y: player.y }, context);\n            drawPlayerDrop(j, i, { x: player.x, y: player.y + offset }, context);\n          }\n        }\n      }\n    }\n    drawGrid(context);\n  }, [arena])\n\n  useEffect(() => {\n    if (!enemyArena) return;\n    draw(enemyContext, enemyArena);\n    drawGrid(enemyContext);\n  }, [enemyArena])\n\n  useEffect(() => {\n    if (!player.matrix) return;\n    draw(context, arena);\n    const offset = hardPlayerDrop();\n    for (let i = 0; i < player.matrix.length; i++) {\n      for (let j = 0; j < player.matrix[i].length; j++) {\n        if (player.matrix[i][j] != 0) {\n          drawPlayer(j, i, { x: player.x, y: player.y }, context);\n          drawPlayerDrop(j, i, { x: player.x, y: player.y + offset }, context);\n        }\n      }\n    }\n    drawGrid(context);\n    if (!playerRef || !enemyId) return;\n    updateData();\n  }, [player])\n\n  const updateEnemy = (x: number, y: number, array: number[], score: number, level: number) => {\n    if (!array) return;\n    let newArena: number[][] = generateBoard(numRows, numCols);\n    for (let i = 0; i < numRows; i++) {\n      for (let j = 0; j < numCols; j++) {\n        newArena[i][j] = array[i * 10 + j];\n      }\n    }\n    setEnemy({score, level})\n    setEnemyArena(newArena);\n  }\n\n  const updateData = async () => {\n    const tempArena = [];\n    const newArena = arena.slice();\n    newArena.forEach((_, y) => {\n      newArena[y].forEach((value, x) => {\n        tempArena.push(value);\n      })\n    })\n    player.matrix.forEach((_, y) => {\n      player.matrix[y].forEach((value, x) => {\n        if(value != 0) {\n          tempArena[(player.y + y) * numCols + player.x + x] = value;\n        }\n      })\n    })\n    const playerInfo = { x: player.x, y: player.y, arena: tempArena, score: score, level: level };\n    await setDoc(playerRef, playerInfo);\n  }\n\n  const initText = () => {\n    const holdTextCanvas = holdTextRef.current;\n    const nextTextCanvas = nextTextRef.current;\n    const holdTextContext = holdTextCanvas.getContext(\"2d\");\n    const nextTextContext = nextTextCanvas.getContext(\"2d\");\n    holdTextContext.canvas.width = 140;\n    holdTextContext.canvas.height = 20;\n    nextTextContext.canvas.width = 140;\n    nextTextContext.canvas.height = 20;\n    holdTextContext.font = \"15px Arial\";\n    holdTextContext.fillStyle = \"black\";\n    holdTextContext.fillText(\"Hold\", 10, 15);\n    nextTextContext.font = \"15px Arial\";\n    nextTextContext.fillStyle = \"black\";\n    nextTextContext.fillText(\"Next\", 10, 15);\n  }\n\n  const initArena = () => {\n    const canvas = canvasRef.current;\n    setCanvas(canvas);\n    const context = canvas.getContext('2d');\n    setContext(context);\n    const holdCanvas = holdRef.current;\n    setHoldPieceCanvas(holdCanvas);\n    const holdContext = holdCanvas.getContext('2d');\n    setHoldPieceContext(holdContext);\n    const nextCanvas = nextRef.current;\n    setNextPieceCanvas(nextCanvas);\n    const nextContext = nextCanvas.getContext('2d');\n    setNextPieceContext(nextContext);\n    context.canvas.width = numCols * 40;\n    context.canvas.height = numRows * 40;\n    context.scale(40, 40);\n    holdContext.canvas.width = holdCols * 35;\n    holdContext.canvas.height = holdRows * 35;\n    holdContext.scale(35, 35);\n    nextContext.canvas.width = nextCols * 35;\n    nextContext.canvas.height = nextRows * 35;\n    nextContext.scale(35, 35);\n    const enemyCanvas = enemyRef.current;\n    setEnemyCanvas(enemyCanvas);\n    const enemyContext = enemyCanvas.getContext('2d');\n    setEnemyContext(enemyContext);\n    enemyContext.canvas.width = numCols * 40;\n    enemyContext.canvas.height = numRows * 40;\n    enemyContext.scale(40, 40);\n  }\n\n  const generateBoard = (row: number, col: number) => {\n    const rows = [];\n    for (let i = 0; i < row; i++) {\n      rows.push(Array.from(Array(col), () => 0));\n    }\n    return rows;\n  }\n\n  const draw = (context: CanvasRenderingContext2D, arena: number[][]) => {\n    for (let i = 0; i < numRows; i++) {\n      for (let j = 0; j < numCols; j++) {\n        drawPiece(j, i, { x: 0, y: 0 }, context, arena);\n      }\n    }\n  }\n\n  const drop = () => {\n    if (collide(arena, { x: player.x, y: player.y + 1, matrix: player.matrix })) {\n      merge(arena, { x: player.x, y: player.y, matrix: player.matrix });\n      setPlayer({ x: player.x, y: player.y, matrix: player.matrix });\n      playerReset();\n      arenaSweep();\n    } else {\n      setPlayer({ x: player.x, y: player.y + 1, matrix: player.matrix });\n    }\n    if (gameOver) return;\n    setSumTime(0);\n  }\n\n  const hardPlayerDrop = () => {\n    let count = 0;\n    if (collide(arena, { x: player.x, y: player.y + 1, matrix: player.matrix })) return count;\n    while (!collide(arena, { x: player.x, y: player.y + count, matrix: player.matrix })) {\n      count++;\n    }\n    return count - 1;\n  }\n\n  const hardDrop = () => {\n    let count = 0;\n    while (!collide(arena, { x: player.x, y: player.y + count, matrix: player.matrix })) {\n      count++;\n    }\n    setPlayer({ x: player.x, y: player.y + count - 1, matrix: player.matrix });\n    merge(arena, { x: player.x, y: player.y + count - 1, matrix: player.matrix });\n    playerReset();\n    setSumTime(0);\n    arenaSweep();\n\n  }\n\n  const playerRotate = (dir) => {\n    let offset = 1;\n    rotate(player.matrix, dir);\n    let tempx = player.x;\n    while (collide(arena, { x: tempx, y: player.y, matrix: player.matrix })) {\n      tempx += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > player.matrix[0].length) {\n        rotate(player.matrix, -dir);\n        setPlayer({ x: player.x, y: player.y, matrix: player.matrix });\n        return;\n      }\n    }\n    setPlayer({ x: tempx, y: player.y, matrix: player.matrix });\n  }\n\n  const rotate = (matrix, dir) => {\n    try {\n      for (let y = 0; y < matrix.length; y++) {\n        for (let x = 0; x < y; x++) {\n          [\n            matrix[x][y],\n            matrix[y][x],\n          ] = [\n              matrix[y][x],\n              matrix[x][y],\n            ];\n\n        }\n      }\n      if (dir > 0) {\n        matrix.forEach(row => row.reverse());\n      } else {\n        matrix.reverse();\n      }\n    } catch (e) {\n      return;\n    }\n  }\n\n  const playerMove = (dir) => {\n    if (collide(arena, { x: player.x + dir, y: player.y, matrix: player.matrix })) return;\n    setPlayer({ x: player.x + dir, y: player.y, matrix: player.matrix });\n  }\n\n  const collide = (arena: number[][], player: player) => {\n    const [m, o] = [player.matrix, { x: player.x, y: player.y }];\n    for (let y = 0; y < m.length; y++) {\n      for (let x = 0; x < m[y].length; x++) {\n        if (m[y][x] != 0 && (arena[y + o.y] && arena[y + o.y][x + o.x]) != 0) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  const mergeHoldReturn = (arena: number[][], matrix: number[][], row: number, col: number) => {\n    const newArena: number[][] = generateBoard(row, col);\n    matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value != 0 && value) {\n          newArena[y][x] = value;\n        }\n      })\n    })\n    return newArena;\n  }\n\n  const mergeEnemy = (nope: number[][], matrix: number[][], offset: { x: number, y: number }) => {\n    console.table(arena);\n    matrix.forEach((row, y) => {\n      row.forEach((value, x) => {\n        if (value != 0 && value) {\n          nope[y + offset.y][x + offset.x] = value;\n        }\n      })\n    })\n    return nope;\n  }\n\n  const mergeNextReturn = (arena: number[][], matrix: [matrix1: number[][], matrix2: number[][], matrix3: number[][]], row: number, col: number) => {\n    const newArena: number[][] = generateBoard(row, col);\n    for (let i = 0; i < matrix.length; i++) {\n      matrix[i].forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value != 0 && value) {\n            newArena[i * 4 + y][x] = value;\n          }\n        })\n      })\n    }\n\n    return newArena;\n  }\n\n  const merge = (arena: number[][], player: player) => {\n    try {\n      const newArena: number[][] = arena.slice();\n      player.matrix.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value != 0 && value) {\n            if (newArena[y + player.y][x + player.x] != 0) throw new Error('error');\n            newArena[y + player.y][x + player.x] = value;\n          }\n        })\n      })\n      setArena(newArena);\n    } catch (error) {\n      setGameOver(true);\n      setSumTime(-1);\n      setPlayer({ x: 0, y: 0, matrix: null });\n      setArena(generateBoard(numRows, numCols));\n    }\n  }\n\n  const arenaSweep = () => {\n    const newArena: number[][] = arena.slice();\n    let newScore = score;\n    let rowCount = 1;\n    outer: for (let y = newArena.length - 1; y > 0; y--) {\n      for (let x = 0; x < newArena[y].length; x++) {\n        if (newArena[y][x] === 0) {\n          continue outer;\n        }\n      }\n      const row = newArena.splice(y, 1)[0].fill(0);\n      newArena.unshift(row);\n      y++;\n      newScore += rowCount * 10;\n      rowCount *= 2;\n    }\n    updateLevel(newScore);\n    setArena(newArena);\n    setScore(newScore);\n  }\n\n  const updateLevel = (newScore: number) => {\n    if(newScore > level * 100) {\n      setLevel(level + 1);\n      setDropTime(dropTime * 0.9);\n    }\n  }\n\n  const drawGrid = (context: CanvasRenderingContext2D) => {\n    context.globalAlpha = 0.5;\n    context.strokeStyle = '#ccc';\n    context.lineWidth = 0.01;\n    for (let i = 0; i < numRows; i++) {\n      context.beginPath();\n      context.moveTo(0, i);\n      context.lineTo(numCols, i);\n      context.stroke();\n    }\n    for (let i = 0; i < numCols; i++) {\n      context.beginPath();\n      context.moveTo(i, 0);\n      context.lineTo(i, numRows);\n      context.stroke();\n    }\n  }\n\n  const drawPlayerDrop = (x: number, y: number, offset: { x: number, y: number }, context: CanvasRenderingContext2D) => {\n    context.globalAlpha = 0.2;\n    context.fillStyle = colors[player.matrix[y][x]];\n    context.fillRect(offset.x + x, offset.y + y, 1, 1);\n  }\n\n  const drawPlayer = (x: number, y: number, offset: { x: number, y: number }, context: CanvasRenderingContext2D) => {\n    context.globalAlpha = 1;\n    context.fillStyle = colors[player.matrix[y][x]];\n    context.fillRect(offset.x + x, offset.y + y, 1, 1);\n  }\n\n  const playerReset = () => {\n    const piece = nextPiece.one;\n    setNextPiece({ one: nextPiece.two, two: nextPiece.three, three: createPiece(Math.floor(Math.random() * 7) + 1) });\n    setPlayer({ x: (arena[0].length / 2 | 0) - (piece[0].length / 2 | 0), y: 0, matrix: piece });\n  }\n\n  const drawPiece = (x: number, y: number, offset: { x: number, y: number }, context: CanvasRenderingContext2D, arena: number[][]) => {\n    context.globalAlpha = 1;\n    context.fillStyle = colors[arena[y][x]];\n    context.fillRect(offset.x + x, offset.y + y, 1, 1);\n  }\n\n  const drawHoldPiece = (x: number, y: number, matrix: number[][]) => {\n    holdPieceContext.fillStyle = colors[holdPieceArena[y][x]];\n    holdPieceContext.fillRect(x, y, 1, 1);\n  }\n\n  const drawNextPiece = (x: number, y: number, matrix: number[][]) => {\n    nextPieceContext.fillStyle = colors[nextPieceArena[y][x]];\n    nextPieceContext.fillRect(x, y, 1, 1);\n  }\n\n  const hold = () => {\n    if (holdPiece) {\n      const piece = holdPiece;\n      setHoldPiece(player.matrix);\n      setPlayer({ x: (arena[0].length / 2 | 0) - (piece[0].length / 2 | 0), y: 0, matrix: piece });\n    } else {\n      setHoldPiece(player.matrix);\n      playerReset();\n    }\n  }\n\n  const createPieces = () => {\n    setNextPiece({ one: createPiece(Math.floor(Math.random() * 7) + 1), two: createPiece(Math.floor(Math.random() * 7) + 1), three: createPiece(Math.floor(Math.random() * 7) + 1) });\n  }\n\n  const playerResetStart = () => {\n    const piece = createPiece(Math.floor(Math.random() * 7) + 1);\n    setPlayer({ x: (arena[0].length / 2 | 0) - (piece[0].length / 2 | 0), y: 0, matrix: piece });\n    setArena(generateBoard(numRows, numCols));\n    setSumTime(0);\n    setScore(0);\n    setLevel(1);\n    setDropTime(500);\n  }\n\n  const start = () => {\n    setGameOver(false);\n    createPieces();\n    draw(context, arena);\n    playerResetStart();\n  }\n\n  const readyUp = async () => {\n    if (!ready) {\n      const collectionRef = collection(db, \"users\");\n      const playerInfo = { ready: true };\n      const docRef = await addDoc(collectionRef, playerInfo);\n      const q = query(collection(db, \"users\"), where(\"ready\", \"==\", true));\n      const unsub = onSnapshot(q, (snapshot) => {\n        snapshot.docs.forEach(async (doc) => {\n          if (doc.id === docRef.id) return;\n          setEnemyId(doc.id);\n          setUnsub(unsub);\n          // await updateEnemy(doc.data().x, doc.data().y, doc.data().arena, doc.data().score, doc.data().level );\n        });\n      });\n      setPlayerString(docRef.id);\n      setPlayerRef(docRef);\n    } else {\n      const docRef = doc(db, \"users\", playerString);\n      await deleteDoc(docRef);\n      setEnemyArena(generateBoard(numRows, numCols));\n      setEnemy({score: 0, level: 1})\n    }\n    setReady(!ready);\n  }\n\n  const createPiece = (type: number) => {\n    switch (type) {\n      case 1:\n        return [\n          [0, 0, 0, 0],\n          [1, 1, 1, 0],\n          [0, 1, 0, 0],\n          [0, 0, 0, 0],\n        ];\n      case 2:\n        return [\n          [0, 0, 0, 0],\n          [0, 2, 2, 0],\n          [0, 2, 2, 0],\n          [0, 0, 0, 0],\n        ];\n      case 3:\n        return [\n          [0, 3, 0, 0],\n          [0, 3, 0, 0],\n          [0, 3, 3, 0],\n          [0, 0, 0, 0],\n        ];\n      case 4:\n        return [\n          [0, 0, 4, 0],\n          [0, 0, 4, 0],\n          [0, 4, 4, 0],\n          [0, 0, 0, 0],\n        ];\n      case 5:\n        return [\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n          [0, 5, 0, 0],\n        ];\n      case 6:\n        return [\n          [0, 0, 0, 0],\n          [0, 6, 6, 0],\n          [6, 6, 0, 0],\n          [0, 0, 0, 0],\n        ];\n      case 7:\n        return [\n          [0, 0, 0, 0],\n          [7, 7, 0, 0],\n          [0, 7, 7, 0],\n          [0, 0, 0, 0],\n        ];\n      default: return null;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <canvas className=\"app-tetris\" ref={canvasRef}></canvas>\n        <div className=\"hold-next\">\n          <canvas className=\"hold-text\" ref={holdTextRef}></canvas>\n          <canvas className=\"hold\" ref={holdRef}></canvas>\n          <canvas className=\"next-text\" ref={nextTextRef}></canvas>\n          <canvas className=\"next\" ref={nextRef}></canvas>\n        </div>\n        <canvas className=\"enemy-tetris\" ref={enemyRef}></canvas>\n      </div>\n      <div>\n        {`Score: ${score} \\t Level: ${level}`}\n        {`Score: ${enemy.score} \\t Level: ${enemy.level}`}\n      </div>\n      <button onClick={() => start()}>Start</button>\n      <button onClick={() => readyUp()}>{ready ? \"Ready\" : \"Not Ready\"}</button>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}